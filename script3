import streamlit as st
import pandas as pd

st.set_page_config(layout="wide")
st.title("📊 FX Threshold Checker with Recalibration Option")

# --- Upload section ---
st.sidebar.header("📁 Upload Data")
threshold_file = st.sidebar.file_uploader("Upload Threshold CSV", type="csv")
trade_file = st.sidebar.file_uploader("Upload Trade CSV", type="csv")

@st.cache_data
def load_csv(file):
    return pd.read_csv(file)

if threshold_file and trade_file:
    df_threshold = load_csv(threshold_file)
    df_trades = load_csv(trade_file)

    st.success("✅ Files uploaded successfully")

    # Recalibration section
    st.sidebar.header("🔧 Recalibrate Thresholds by Group")
    unique_groups = sorted(df_threshold["Group"].unique())
    new_thresholds = {}
    for g in unique_groups:
        default_val = float(df_threshold[df_threshold["Group"] == g]["value"].mean())
        new_thresholds[g] = st.sidebar.number_input(f"Group {g} Threshold", value=default_val, format="%.5f")

    # Apply recalibrated thresholds
    recalibrated_thresholds = pd.DataFrame([
        {"Group": g, "value": new_thresholds[g]} for g in unique_groups
    ])

    df_trades["max_group"] = df_trades[["base_currency_group", "orig_curr_group"]].max(axis=1)
    df_trades["legal_entity"] = df_trades["legal_entity"].astype(str)  # ensure merge compatibility

    # Get unique entities
    unique_entities = df_trades["legal_entity"].unique()

    # Merge each entity with recalibrated group-level thresholds
    results = []
    for entity in unique_entities:
        df_entity = df_trades[df_trades["legal_entity"] == entity].copy()
        df_entity = df_entity.merge(recalibrated_thresholds, how="left", left_on="max_group", right_on="Group")
        df_entity["threshold_used"] = df_entity["value"]
        df_entity["is_within_threshold"] = df_entity["deviation_percent"] <= df_entity["threshold_used"]
        results.append(df_entity)

    df_result = pd.concat(results, ignore_index=True)

    st.subheader("📊 Recalibrated Results by Group")

    for g in unique_groups:
        st.markdown(f"### Group {g}")
        df_group = df_result[df_result["max_group"] == g]
        col1, col2, col3 = st.columns(3)
        col1.metric("Total Trades", len(df_group))
        col2.metric("Breaches", (~df_group["is_within_threshold"]).sum())
        col3.metric("Within Threshold", df_group["is_within_threshold"].sum())

        if len(df_group) > 0 and df_group.memory_usage(deep=True).sum() < 50 * 1024**2:
            with st.expander("Preview Top 100 Trades", expanded=False):
                st.dataframe(df_group.head(100))

    st.download_button("📥 Download Full Recalibrated Results CSV", df_result.to_csv(index=False), file_name="fx_recalibrated_results.csv")

else:
    st.warning("Please upload both the threshold and trade files to begin.")
